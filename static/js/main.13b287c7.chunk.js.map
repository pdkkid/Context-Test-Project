{"version":3,"sources":["app-context.tsx","pages/main.styles.ts","components/selector/selector.styles.ts","components/selector/selector.tsx","components/tab-controller/tab-controller.styles.ts","components/tab-controller/tabs/tabs.style.ts","components/tab-controller/tabs/tabs.types.ts","components/tab-controller/tabs/tabs.tsx","components/tab-controller/tab-controller.tsx","pages/main.tsx","app.tsx","index.tsx"],"names":["AppContext","createContext","app","fontSize","selectedTab","setAppState","MainContainer","styled","div","props","color","SelectorContainer","Selector","NameSelector","FontSelector","ColorSelector","Color","button","fill","selected","DefaultColors","useContext","handleFontChange","size","Math","sign","Number","toFixed","placeholder","autoCapitalize","onKeyUp","event","key","currentTarget","Element","name","value","handleNameChange","onClick","map","x","Base","TabContainer","HeaderContainer","TabHeader","TabBase","StyledContent","StyledForm","DefaultTabs","label","content","Faker","seed","lorem","paragraphs","src","image","nightlife","alt","className","food","type","id","TabController","tabs","i","newTabIndex","Main","App","useState","context","Provider","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13b287c7.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport interface AppState {\n  color?: string;\n  name?: string;\n  selectedTab: number;\n  fontSize: number;\n}\n\nexport interface AppContextType {\n  app: AppState;\n  setAppState: (state: AppState) => void;\n}\n\nexport const AppContext = createContext<AppContextType>({\n  app: { fontSize: 1, selectedTab: 0 },\n  setAppState: () => {},\n});\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div<{ color: string }>`\n  color: ${(props) => props.color};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: content-box;\n  h1 {\n    font-size: 2.5em;\n    user-select: none;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const SelectorContainer = styled.div`\n  width: 100%;\n  color: inherit;\n  box-sizing: content-box;\n  margin-bottom: 50px;\n  display: flex;\n  padding: 10px;\n  min-width: fit-content;\n  max-width: 25%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  border: 3.5px solid rgba(1, 42, 74, 0.3);\n  border-radius: 10px;\n  background-color: rgba(1, 42, 74, 0.1);\n`;\n\nconst Selector = styled.div`\n  width: 100%;\n  color: inherit;\n  user-select: none;\n  justify-content: space-around;\n  box-sizing: content-box;\n  align-items: center;\n  display: flex;\n  padding: 0 5px 0;\n`;\n\nexport const NameSelector = styled(Selector)`\n  flex: 1;\n  input {\n    color: inherit;\n    font-weight: 700;\n    font-family: inherit;\n    font-size: 1.2em;\n    appearance: none;\n    background-color: transparent;\n    border: 0;\n    text-align: center;\n    resize: none;\n    overflow: hidden;\n    ::placeholder {\n      color: inherit;\n      font-weight: 900;\n      opacity: 0.5;\n      border-bottom: 1.5px solid rgba(1, 42, 74, 0.3);\n    }\n    &:focus {\n      border: none;\n      outline: none;\n\n      ::placeholder {\n        opacity: 0;\n      }\n    }\n  }\n`;\n\nexport const FontSelector = styled(Selector)`\nflex: 1;\njustify-content: center;\n  span {\n    min-width: 65px;\n    text-align: center;\n    font-size: 1.2em;\n    padding: 0 5px 0;\n  }\n  button {\n    background-color: transparent;\n    text-decoration: none;\n    border: 1.5px solid rgba(1, 42, 74, 0.3);\n    border-radius: 5px;\n    padding: 5px 10px;\n  }\n`;\n\nexport const ColorSelector = styled(Selector)`\nflex: 4;\n`;\n\nexport const Color = styled.button<{ fill: string; selected: boolean }>`\n  height: 4em;\n  width: 4em;\n  border-radius: 5px;\n  margin: 0 4px 0;\n  background-color: ${(props) => props.fill};\n  ${(props) =>\n    props.selected &&\n    `\n        width: 5.2em;\n        height: 5.2em;\n    `}\n`;\n","import React, { useContext } from \"react\";\nimport {\n  Color,\n  SelectorContainer,\n  NameSelector,\n  ColorSelector,\n  FontSelector,\n} from \".\";\nimport { AppContext } from \"../../app-context\";\n\nexport const DefaultColors: string[] = [\n  \"#335C67\",\n  \"#60935D\",\n  \"#d79634\",\n  \"#907F9F\",\n  \"#EF476F\",\n  \"#9E2A2B\",\n  \"#ba2477\",\n];\n\nexport const Selector = (): JSX.Element => {\n  const { app, setAppState } = useContext(AppContext);\n\n  const handleFontChange = (size: number) => {\n    switch (Math.sign(size)) {\n      case -1: {\n        size > 0 && setAppState({ ...app, fontSize: Number(size.toFixed(1)) });\n        break;\n      }\n      case 1: {\n        size <= 3 && setAppState({ ...app, fontSize: Number(size.toFixed(1)) });\n        break;\n      }\n    }\n  };\n\n  const handleNameChange = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    event.key === \"Enter\" &&\n      event.currentTarget instanceof Element &&\n      setAppState({ ...app, name: event.currentTarget.value });\n  };\n\n  return (\n    <SelectorContainer>\n      <NameSelector>\n        <input\n          size={15}\n          placeholder=\"Name\"\n          autoCapitalize=\"words\"\n          onKeyUp={(event) => handleNameChange(event)}\n        />\n      </NameSelector>\n      <FontSelector>\n        <button onClick={() => handleFontChange(app.fontSize - 0.1)}>\n          {\"<\"}\n        </button>\n        <span>{app.fontSize + \" em\"}</span>\n        <button onClick={() => handleFontChange(app.fontSize + 0.1)}>\n          {\">\"}\n        </button>\n      </FontSelector>\n      <ColorSelector>\n        {DefaultColors.map((x) => (\n          <Color\n            onClick={() => {\n              setAppState({ ...app, color: x });\n            }}\n            selected={app.color === x}\n            fill={x}\n          />\n        ))}\n      </ColorSelector>\n    </SelectorContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nconst Base = styled.div`\n  width: 80%;\n  min-width: 40vh;\n`;\nexport const TabContainer = styled(Base)<{ fontSize: string }>`\n  font-size: ${(props) => props.fontSize};\n  background-color: rgba(1, 42, 74, 0.1);\n  border-bottom-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nexport const HeaderContainer = styled(Base)`\n  display: flex;\n  justify-content: space-evenly;\n  gap: 10px;\n  user-select: none;\n  button {\n    font-size: 1.5em;\n    width: 100%;\n    height: 2em;\n    border: none;\n  }\n`;\n\nexport const TabHeader = styled.button<{ selected: boolean }>`\n  border-top-left-radius: 15px;\n  border-top-right-radius: 15px;\n  ${(props) =>\n    props.selected &&\n    `\n      background-color: rgba(1, 42, 74, 0.1);\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const TabBase = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 10px 10px 10px;\n  min-height: fit-content;\n  hr {\n    width: 100%;\n    height: 4px;\n    background: rgba(1, 42, 74, 0.25);\n    margin: .25em 0 .25em;\n    border-radius: 10px;\n    border-style: none;\n    border-width: 0;\n  }\n`;\n\nexport const StyledContent = styled(TabBase)`\n  h2,\n  h3 {\n    margin: 0;\n    margin-top: 0.5em;\n    text-align: center;\n  }\n  h3 {\n    margin-bottom: 0.75em;\n  }\n  div {\n    margin: 0.75em;\n    span {\n      margin-bottom: 0.75em;\n      display: block;\n    }\n    img {\n      border-radius: 10px;\n      min-width: 20vh;\n      max-width: 20%;\n      height: auto;\n    }\n  }\n  .right {\n    margin-left: 0.75em;\n    float: right;\n  }\n  .left {\n    margin-right: 0.75em;\n    float: left;\n  }\n`;\n\nexport const StyledForm = styled(TabBase)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%\n\n    label {\n\n    }\n\n    input, select, textarea {\n      min-width: 25%;\n      max-width: em;\n    }\n  }\n`;\n","import { ReactNode } from \"react\";\nimport { AppState } from \"../../../app-context\";\nimport { Content, Form, Table, Icons, Video, Grid } from \"./tabs\";\n\nexport type TabType = {\n  label: string;\n  content: (props: AppState) => ReactNode;\n};\n\nexport const DefaultTabs: TabType[] = [\n  { label: \"Content\", content: Content },\n  { label: \"Form\", content: Form },\n  { label: \"Table\", content: Table },\n  { label: \"Icons\", content: Icons },\n  { label: \"Video\", content: Video },\n  { label: \"Grid\", content: Grid },\n];\n","import React, { ReactNode } from \"react\";\nimport { AppState } from \"../../../app-context\";\nimport { StyledContent, StyledForm } from \"./tabs.style\";\nimport Faker from \"faker\";\nexport const Content = (props: AppState): ReactNode => {\n  Faker.seed(props.selectedTab);\n  return (\n    <StyledContent>\n      <h2>{props.name && \"Hello \" + props.name + \",\"}</h2>\n      <h3>Here's some lorem ipsum to liven up your day! Enjoy</h3>\n      <hr />\n      <div>\n        <span>{Faker.lorem.paragraphs(4)}</span>\n        <img src={Faker.image.nightlife()} alt=\"\" className=\"left\" />\n        <span>{Faker.lorem.paragraphs(3)}</span>\n        <span>{Faker.lorem.paragraphs(2)}</span>\n        <span>{Faker.lorem.paragraphs(5)}</span>\n      </div>\n      <hr />\n      <div>\n        <img src={Faker.image.food()} alt=\"\" className=\"right\" />\n        <span>{Faker.lorem.paragraphs(5)}</span>\n        <span>{Faker.lorem.paragraphs(3)}</span>\n      </div>\n    </StyledContent>\n  );\n};\n\nexport const Form = (props: AppState): ReactNode => {\n  Faker.seed(props.selectedTab);\n  return (\n    <StyledForm>\n      <form>\n        <label>First Name</label>\n        <input\n          type=\"text\"\n          id=\"fname\"\n          name=\"firstname\"\n          placeholder=\"Your name..\"\n        />\n\n        <label>Last Name</label>\n        <input\n          type=\"text\"\n          id=\"lname\"\n          name=\"lastname\"\n          placeholder=\"Your last name..\"\n        />\n\n        <label>Country</label>\n        <select id=\"country\" name=\"country\">\n          <option value=\"australia\">Australia</option>\n          <option value=\"canada\">Canada</option>\n          <option value=\"usa\">USA</option>\n        </select>\n\n        <label>Subject</label>\n        <textarea\n          id=\"subject\"\n          name=\"subject\"\n          placeholder=\"Write something..\"\n        ></textarea>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <form>\n            <input type=\"text\" placeholder=\"Name\" />\n            <input type=\"email\" placeholder=\"Email\" />\n            <input type=\"text\" placeholder=\"Phone\" />\n            <input type=\"url\" placeholder=\"Website\" />\n            <input type=\"text\" placeholder=\"Subject\" />\n            <textarea placeholder=\"Message\"></textarea>\n            <input type=\"submit\" value=\"Send Message\" />\n      </form>\n    </StyledForm>\n  );\n};\n\nexport const Table = (props: AppState): ReactNode => {\n  Faker.seed(props.selectedTab);\n  return <h3>Table Test</h3>;\n};\n\nexport const Icons = (props: AppState): ReactNode => {\n  Faker.seed(props.selectedTab);\n  return <h3>Icons Test</h3>;\n};\n\nexport const Video = (props: AppState): ReactNode => {\n  Faker.seed(props.selectedTab);\n  return <h3>Video Test</h3>;\n};\n\nexport const Grid = (props: AppState): ReactNode => {\n  Faker.seed(props.selectedTab);\n  return <h3>Grid Test</h3>;\n};\n","import {\n  TabContainer,\n  TabHeader,\n  HeaderContainer,\n} from \"./tab-controller.styles\";\nimport { DefaultTabs } from \"./tabs\";\nimport { Fragment, useContext } from \"react\";\nimport { AppContext } from \"../../app-context\";\n\nexport const TabController = (): JSX.Element => {\n  const { app, setAppState } = useContext(AppContext);\n  const { selectedTab, fontSize } = app;\n\n  const tabs = DefaultTabs.map((x) => x);\n\n  const handleTabChange = (newTabIndex: number) => {\n    setAppState({ ...app, selectedTab: newTabIndex });\n  };\n\n  return (\n    <Fragment>\n      <HeaderContainer>\n        {tabs.map((x, i) => (\n          <TabHeader\n            onClick={() => {\n              handleTabChange(i);\n            }}\n            selected={selectedTab === i}\n          >\n            {x.label}\n          </TabHeader>\n        ))}\n      </HeaderContainer>\n      <TabContainer fontSize={fontSize + \"em\"}>{tabs[selectedTab].content(app)}</TabContainer>\n    </Fragment>\n  );\n};\n","import { useContext } from \"react\";\nimport { AppContext } from \"../app-context\";\nimport { MainContainer } from \"./main.styles\";\nimport { Selector } from \"../components/selector\";\nimport { TabController } from \"../components/tab-controller\";\n\nexport const Main = (): JSX.Element => {\n  const context = useContext(AppContext);\n  const { color, name } = context.app;\n\n  return (\n    <MainContainer color={color!}>\n      <h1>{name && name + \"'s \"} React Context Demo</h1>\n      <Selector />\n      <TabController />\n    </MainContainer>\n  );\n};\n","import React, { useState } from \"react\";\nimport { AppState, AppContextType, AppContext } from \"./app-context\";\nimport { Main } from \"./pages/main\";\n\nexport const App = (): JSX.Element => {\n  const [app, setAppState] = useState<AppState>({\n    color: \"#335C67\",\n    fontSize: 1.5,\n    selectedTab: 0,\n  });\n\n  const context: AppContextType = { app, setAppState };\n\n  return (\n    <AppContext.Provider value={context}>\n      <Main />\n    </AppContext.Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './app';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    background-color: rgba(1, 42, 74, 0.2);\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}